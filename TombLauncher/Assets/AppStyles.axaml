<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:controls="clr-namespace:TombLauncher.Controls;assembly=TombLauncher.Controls">
    <Design.PreviewWith>
        <Border Padding="20">
            <!-- Add Controls for Previewer Here -->
        </Border>
    </Design.PreviewWith>
    <Styles.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="ColoredButtonTextBrush">White</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="ColoredButtonTextBrush">White</SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Styles.Resources>

    <Style Selector=":is(Button).round-button">
        <Setter Property="Margin" Value="9,3,9,3" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="6" />
    </Style>
    <Style Selector=":is(Button).round-button /template/ ContentPresenter">
        <Setter Property="CornerRadius" Value="20" />
    </Style>
    <Style Selector=":is(Button):pointerover.round-button /template/ ContentPresenter">
        <Setter Property="Background" Value="#80e0e0e0" />
    </Style>

    <Style Selector="Run.italicsLabel">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontStyle" Value="Italic" />
    </Style>

    <Style Selector="StackPanel.stackedButtons > Button">
        <Setter Property="Margin" Value="0, 5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
    </Style>
    <Style Selector="TextBlock.paragraph">
        <Setter Property="Margin" Value="0, 5"></Setter>
    </Style>

    <Style Selector="TextBlock.h1">
        <Setter Property="FontFamily" Value="{StaticResource TombRaiderFont}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="36" />
    </Style>
    <Style Selector="TextBlock.settings-h1">
        <Setter Property="Margin" Value="0, 15"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource TombRaiderFont}" />
        <Setter Property="FontSize" Value="36" />
    </Style>
    <Style Selector="TextBlock.label">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5, 0"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
    </Style>
    <Style Selector=":is(Control).padded">
        <Setter Property="Margin" Value="5"></Setter>
    </Style>
    <Style Selector=":is(Button).stretched">
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style Selector=":is(SplitButton).stretched">
        <Setter Property="Height" Value="36" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style Selector=":is(Button).btn-success">
        <Setter Property="Background" Value="Green"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ColoredButtonTextBrush}"></Setter>
    </Style>
    <Style Selector=":is(SplitButton).btn-success">
        <Setter Property="Background" Value="Green"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ColoredButtonTextBrush}"></Setter>
    </Style>
    <Style Selector=":is(controls|RoundIconButton).btn-success">
        <Setter Property="Background" Value="Green"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ColoredButtonTextBrush}"></Setter>
    </Style>
    <Style Selector=":is(Button).btn-danger">
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="Foreground" Value="{DynamicResource ColoredButtonTextBrush}"></Setter>
    </Style>
    <Style Selector=":is(SplitButton).btn-danger">
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="Foreground" Value="{DynamicResource ColoredButtonTextBrush}"></Setter>
    </Style>
    <Style Selector=":is(controls|RoundIconButton).btn-danger">
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="Foreground" Value="{DynamicResource ColoredButtonTextBrush}"></Setter>
    </Style>
    <Style Selector="TextBlock.text-muted">
        <Setter Property="Foreground" Value="#6c757d"></Setter>
    </Style>
    <Style Selector="TextBlock:disabled">
        <Setter Property="Foreground" Value="#6c757d"></Setter>
    </Style>
    <Style Selector="avalonia|MaterialIcon.text-muted">
        <Setter Property="Foreground" Value="#6c757d"></Setter>
    </Style>
    <Style Selector="avalonia|MaterialIcon.warning">
        <Setter Property="Foreground" Value="#ffc107"></Setter>
    </Style>

    
    <Style Selector="ProgressBar">
        <Setter Property="Transitions">
            <Transitions>
                <DoubleTransition Property="Value" Duration="0:0:0.1"></DoubleTransition>
            </Transitions>
        </Setter>
    </Style>
    
    <Style Selector="DataValidationErrors">
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel LastChildFill="True">
                    <ContentControl DockPanel.Dock="Right"
                                    ContentTemplate="{TemplateBinding ErrorTemplate}"
                                    DataContext="{TemplateBinding Owner}"
                                    Content="{Binding (DataValidationErrors.Errors)}"
                                    IsVisible="{Binding (DataValidationErrors.HasErrors)}"/>
                    <ContentPresenter Name="PART_ContentPresenter"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      Padding="{TemplateBinding Padding}"/>
                </DockPanel>
            </ControlTemplate>
        </Setter>
        <Setter Property="ErrorTemplate">
            <DataTemplate x:DataType="{x:Type x:Object}">
                <Canvas Width="14" Height="14" Margin="4 0 1 0" 
                        Background="Transparent">
                    <Canvas.Styles>
                        <Style Selector="ToolTip">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="BorderBrush" Value="DarkRed"/>
                        </Style>
                    </Canvas.Styles>
                    <ToolTip.Tip>
                        <ItemsControl ItemsSource="{Binding}"/>
                    </ToolTip.Tip>
                    <Path Data="M14,7 A7,7 0 0,0 0,7 M0,7 A7,7 0 1,0 14,7 M7,3l0,5 M7,9l0,2" 
                          Stroke="Red" 
                          StrokeThickness="2"/>
                </Canvas>
            </DataTemplate>
        </Setter>
    </Style>
    <Style Selector="TextBlock.small">
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    <Style Selector="CheckBox.small">
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
</Styles>